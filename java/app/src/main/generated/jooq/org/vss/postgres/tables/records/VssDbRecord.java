/*
 * This file is generated by jOOQ.
 */
package org.vss.postgres.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.vss.postgres.tables.VssDb;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VssDbRecord extends UpdatableRecordImpl<VssDbRecord> implements Record7<String, String, String, byte[], Long, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.vss_db.user_token</code>.
     */
    public VssDbRecord setUserToken(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.user_token</code>.
     */
    public String getUserToken() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.vss_db.store_id</code>.
     */
    public VssDbRecord setStoreId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.store_id</code>.
     */
    public String getStoreId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vss_db.key</code>.
     */
    public VssDbRecord setKey(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.key</code>.
     */
    public String getKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.vss_db.value</code>.
     */
    public VssDbRecord setValue(byte[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.value</code>.
     */
    public byte[] getValue() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>public.vss_db.version</code>.
     */
    public VssDbRecord setVersion(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.version</code>.
     */
    public Long getVersion() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.vss_db.created_at</code>.
     */
    public VssDbRecord setCreatedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.vss_db.last_updated_at</code>.
     */
    public VssDbRecord setLastUpdatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.vss_db.last_updated_at</code>.
     */
    public OffsetDateTime getLastUpdatedAt() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, byte[], Long, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, byte[], Long, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return VssDb.VSS_DB.USER_TOKEN;
    }

    @Override
    public Field<String> field2() {
        return VssDb.VSS_DB.STORE_ID;
    }

    @Override
    public Field<String> field3() {
        return VssDb.VSS_DB.KEY;
    }

    @Override
    public Field<byte[]> field4() {
        return VssDb.VSS_DB.VALUE;
    }

    @Override
    public Field<Long> field5() {
        return VssDb.VSS_DB.VERSION;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return VssDb.VSS_DB.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return VssDb.VSS_DB.LAST_UPDATED_AT;
    }

    @Override
    public String component1() {
        return getUserToken();
    }

    @Override
    public String component2() {
        return getStoreId();
    }

    @Override
    public String component3() {
        return getKey();
    }

    @Override
    public byte[] component4() {
        return getValue();
    }

    @Override
    public Long component5() {
        return getVersion();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component7() {
        return getLastUpdatedAt();
    }

    @Override
    public String value1() {
        return getUserToken();
    }

    @Override
    public String value2() {
        return getStoreId();
    }

    @Override
    public String value3() {
        return getKey();
    }

    @Override
    public byte[] value4() {
        return getValue();
    }

    @Override
    public Long value5() {
        return getVersion();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value7() {
        return getLastUpdatedAt();
    }

    @Override
    public VssDbRecord value1(String value) {
        setUserToken(value);
        return this;
    }

    @Override
    public VssDbRecord value2(String value) {
        setStoreId(value);
        return this;
    }

    @Override
    public VssDbRecord value3(String value) {
        setKey(value);
        return this;
    }

    @Override
    public VssDbRecord value4(byte[] value) {
        setValue(value);
        return this;
    }

    @Override
    public VssDbRecord value5(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public VssDbRecord value6(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public VssDbRecord value7(OffsetDateTime value) {
        setLastUpdatedAt(value);
        return this;
    }

    @Override
    public VssDbRecord values(String value1, String value2, String value3, byte[] value4, Long value5, OffsetDateTime value6, OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VssDbRecord
     */
    public VssDbRecord() {
        super(VssDb.VSS_DB);
    }

    /**
     * Create a detached, initialised VssDbRecord
     */
    public VssDbRecord(String userToken, String storeId, String key, byte[] value, Long version, OffsetDateTime createdAt, OffsetDateTime lastUpdatedAt) {
        super(VssDb.VSS_DB);

        setUserToken(userToken);
        setStoreId(storeId);
        setKey(key);
        setValue(value);
        setVersion(version);
        setCreatedAt(createdAt);
        setLastUpdatedAt(lastUpdatedAt);
    }

    /**
     * Create a detached, initialised VssDbRecord
     */
    public VssDbRecord(org.vss.postgres.tables.pojos.VssDb value) {
        super(VssDb.VSS_DB);

        if (value != null) {
            setUserToken(value.getUserToken());
            setStoreId(value.getStoreId());
            setKey(value.getKey());
            setValue(value.getValue());
            setVersion(value.getVersion());
            setCreatedAt(value.getCreatedAt());
            setLastUpdatedAt(value.getLastUpdatedAt());
        }
    }
}
